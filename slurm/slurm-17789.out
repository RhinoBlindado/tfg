------------ Options -------------
amsgrad: True
arch: mconvnet
batch_size: 1
beta1: 0.9
checkpoints_dir: ./checkpoints
continue_train: False
dataroot: ./data/datasets/Nodule-98-30K
dataset_mode: classification
dropout: 0.25
epoch_count: 1
export_folder: 
fc_n: [2042, 512, 128]
flip_edges: 0.2
gpu_ids: [0]
init_gain: 0.02
init_type: normal
is_train: True
lr: 0.0002
lr_decay_iters: 50
lr_policy: lambda
max_dataset_size: inf
name: Nodule-98-30K-2
ncf: [32, 64, 256, 256]
ninput_edges: 30000
niter: 50
niter_decay: 10
no_vis: False
norm: batch
num_aug: 2
num_groups: 1
num_threads: 2
phase: train
plus: False
pool_res: [20000, 15000, 10000, 5000]
print_freq: 10
resblocks: 0
run_test_freq: 1
save_epoch_freq: 1
save_latest_freq: 250
scale_verts: False
seed: None
serial_batches: False
slide_verts: 0.2
verbose_plot: False
which_epoch: latest
-------------- End ----------------
loaded mean / std from cache
#training meshes = 78
---------- Network initialized -------------
[Network] Total number of parameters : 2.059 M
-----------------------------------------------
saving the latest model (epoch 1, total_steps 1)
(epoch: 1, iters: 10, time: 3.002, data: 0.239) loss: 0.744 
(epoch: 1, iters: 20, time: 2.757, data: 0.022) loss: 0.704 
(epoch: 1, iters: 30, time: 2.751, data: 0.016) loss: 0.700 
(epoch: 1, iters: 40, time: 2.719, data: 0.043) loss: 0.714 
(epoch: 1, iters: 50, time: 2.931, data: 0.000) loss: 0.719 
(epoch: 1, iters: 60, time: 2.718, data: 0.000) loss: 0.687 
(epoch: 1, iters: 70, time: 2.908, data: 0.014) loss: 0.697 
saving the model at the end of epoch 1, iters 78
End of epoch 1 / 60 	, Time Taken: 223 sec, Loss: 0.690
learning rate = 0.0002000
Running Test
loaded mean / std from cache
loading the model from ./checkpoints/Nodule-98-30K-2/latest_net.pth
/mnt/homeGPU/vlugli/condaEnvs/meshcnnplus/lib/python3.6/site-packages/numpy/core/_asarray.py:136: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray
  return array(a, dtype, copy=False, order=order, subok=True)
Traceback (most recent call last):
  File "./networks/MeshCNNPlus/development/meshcnn/train.py", line 57, in <module>
    acc = run_test(epoch)
  File "/mnt/homeGPU/vlugli/tfg/networks/MeshCNNPlus/development/meshcnn/test.py", line 28, in run_test
    ncorrect, nexamples, loss = model.test(soleTest)
  File "/mnt/homeGPU/vlugli/tfg/networks/MeshCNNPlus/development/meshcnn/models/mesh_classifier.py", line 127, in test
    return correct, len(label_class), self.loss
UnboundLocalError: local variable 'correct' referenced before assignment
